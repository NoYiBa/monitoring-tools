#!/usr/bin/env python
try:
    import re
    exit_code = 0
    # Get perfs
    raw_perf_datas = allperfs(self)
    disk_names = set([re.match('([^-]*)-(.*)_([^-]*)', metric_name).groups()[1]
                      for metric_name in raw_perf_datas.keys()])

    perf_datas = []
    exit_codes = []
    outputs = []
    data = {}
    
    for disk in disk_names:
        data['disk'] = disk
        data['disk_time_written'] = float(raw_perf_datas.get('disk_time-%(disk)s_0' % data).value)
        data['disk_time_read'] = float(raw_perf_datas.get('disk_time-%(disk)s_1' % data).value)
        data['disk_merged_written'] = float(raw_perf_datas.get('disk_merged-%(disk)s_0' % data).value)
        data['disk_merged_read'] = float(raw_perf_datas.get('disk_merged-%(disk)s_1' % data).value)
        data['disk_ops_written'] = float(raw_perf_datas.get('disk_ops-%(disk)s_0' % data).value)
        data['disk_ops_read'] = float(raw_perf_datas.get('disk_ops-%(disk)s_1' % data).value)
        data['disk_octets_written'] = float(raw_perf_datas.get('disk_octets-%(disk)s_0' % data).value)
        data['disk_octets_read'] = float(raw_perf_datas.get('disk_octets-%(disk)s_1' % data).value)
        # Prepare output
        perf_datas.append("'%(disk)s_disk_time_written=%(disk_time_written)0.2fs/s;;;0' "
                          "'%(disk)s_disk_time_read=%(disk_time_read)0.2fs/s;;;0' "
                          "'%(disk)s_disk_merged_written=%(disk_merged_written)0.2fmerged ops/s;;;0' "
                          "'%(disk)s_disk_merged_read=%(disk_merged_read)0.2fmerged ops/s;;;0' "
                          "'%(disk)s_disk_ops_written=%(disk_ops_written)0.2fops/s;;;0' "
                          "'%(disk)s_disk_ops_read=%(disk_ops_read)0.2fops/s;;;0' "
                          "'%(disk)s_disk_octets_written=%(disk_octets_written)0.2fbytes/s;;;0' "
                          "'%(disk)s_disk_octets_read=%(disk_octets_read)0.2fbytes/s;;;0' " % data)
        outputs.append("%(disk)s_disk_time=%(disk_time_written)0.2f:%(disk_time_read)0.2f(s/s) - "
                       "%(disk)s_disk_merged=%(disk_merged_written)0.2f:%(disk_merged_read)0.2f(merged ops/s) - "
                       "%(disk)s_disk_ops=%(disk_ops_written)0.2f:%(disk_ops_read)0.2f(ops/s) - "
                       "%(disk)s_disk_octets=%(disk_octets_written)0.2f:%(disk_octets_read)0.2f(bytes/s) " % data)
    # Set ouput
    perf_data = " ".join(perf_datas)
    output = " # ".join(outputs)
    output = "Stats (written:read) # " + output
    set_value(self, output, perf_data, exit_code)

except Exception, e:
    set_value(self, "UNKNOWN: Trigger error: " + str(e), "", 3)

